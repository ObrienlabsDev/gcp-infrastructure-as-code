
#
# gcloud builds submit --config cloudbuild.yaml .
#
# Prerequisites:
# 2. The Cloud Build service account needs appropriate IAM permissions 
#  roles/iam.serviceAccountUser
steps:
  - name: 'hashicorp/terraform:1.5.7'
    entrypoint: 'terraform'
    args: ['init']
    id: 'Terraform Init'
    dir: '4-appmod'

  - name: 'hashicorp/terraform:1.5.7'
    entrypoint: 'terraform'
    args: ['validate']
    id: 'Terraform Validate'
    dir: '4-appmod'

  - name: 'hashicorp/terraform:1.5.7'
    entrypoint: 'terraform'
    args:
      - 'plan'
      - '-out=tfplan'
      # cloud Build automatically populates $PROJECT_ID.
      - '-var=project_id=${PROJECT_ID}'
      - '-var-file=terraform.tfvars'
    id: 'Terraform Plan'
    dir: '4-appmod'

#  - name: 'hashicorp/terraform:1.5.7'
#    entrypoint: 'terraform'
#    args:
#      - 'apply'
#      - '-var-file=terraform.tfvars'
#      - '-var=project_id=${PROJECT_ID}'
#      - '-auto-approve'
#    id: 'Terraform Apply'
#    dir: '4-appmod'

  - name: 'hashicorp/terraform:1.5.7'
    entrypoint: 'terraform'
    args:
      - 'destroy'
      - '-var-file=terraform.tfvars'
      - '-var=project_id=${PROJECT_ID}'
      - '-auto-approve'
    id: 'Terraform destroy'
    dir: '4-appmod'
# Save the generated plan file as an artifact.
# This allows you to inspect the plan after the build completes or use it
# in a subsequent 'apply' build.
#artifacts:
#  objects:
#    location: 'gs://${PROJECT_ID}_cloudbuild/artifacts'
#    paths: ['tfplan']

# Explicitly define where to store the logs for this build.
# This is required when using a custom service account.
logsBucket: 'gs://${PROJECT_ID}_cloudbuild/artifacts/logs'